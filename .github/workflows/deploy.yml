name: Deploy EC-CUBE2
on:
  repository_dispatch:
    types: [ deploy ]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.client_payload.tag_name }}

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install to Composer
      run: composer install --no-scripts --no-dev --no-interaction --optimize-autoloader

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"

    - name: Packaging
      working-directory: ../
      env:
        TAG_NAME: ${{ github.event.client_payload.tag_name }}
        REPOSITORY_NAME: ${{ github.event.repository.name }}
      run: |
        echo $TAG_NAME
        echo "remove obsolete files..."
        rm -rf $GITHUB_WORKSPACE/.git
        rm -rf $GITHUB_WORKSPACE/.gitignore
        rm -rf $GITHUB_WORKSPACE/.github
        rm -rf $GITHUB_WORKSPACE/.editorconfig
        rm -rf $GITHUB_WORKSPACE/.travis.yml
        rm -rf $GITHUB_WORKSPACE/appveyor.yml
        rm -rf $GITHUB_WORKSPACE/.coveralls.yml
        rm -rf $GITHUB_WORKSPACE/.php_cs.dist
        rm -rf $GITHUB_WORKSPACE/phpunit.xml.dist
        rm -rf $GITHUB_WORKSPACE/app.json
        rm -rf $GITHUB_WORKSPACE/Procfile
        rm -rf $GITHUB_WORKSPACE/build.xml
        rm -rf $GITHUB_WORKSPACE/README.md
        rm -rf $GITHUB_WORKSPACE/codeception.yml
        rm -rf $GITHUB_WORKSPACE/php.ini
        rm -rf $GITHUB_WORKSPACE/phpinicopy.sh
        rm -rf $GITHUB_WORKSPACE/phpinidel.sh
        rm -rf $GITHUB_WORKSPACE/*.phar
        rm -rf $GITHUB_WORKSPACE/setup.sh
        rm -rf $GITHUB_WORKSPACE/setup_heroku.php
        rm -rf $GITHUB_WORKSPACE/svn_propset.sh
        rm -rf $GITHUB_WORKSPACE/ctests
        rm -rf $GITHUB_WORKSPACE/tests
        rm -rf $GITHUB_WORKSPACE/templates
        rm -rf $GITHUB_WORKSPACE/patches
        rm -rf $GITHUB_WORKSPACE/docs
        rm -rf $GITHUB_WORKSPACE/html/test
        find $GITHUB_WORKSPACE -name "dummy" -print0 | xargs -0 rm -rf
        find $GITHUB_WORKSPACE -name ".git*" -and ! -name ".gitkeep" -print0 | xargs -0 rm -rf
        find $GITHUB_WORKSPACE -name ".git*" -type d -print0 | xargs -0 rm -rf
        echo "set permissions..."
        chmod -R o+w $GITHUB_WORKSPACE/html/install/temp
        chmod -R o+w $GITHUB_WORKSPACE/html/user_data
        chmod -R o+w $GITHUB_WORKSPACE/html/upload
        chmod -R o+w $GITHUB_WORKSPACE/data/cache
        chmod -R o+w $GITHUB_WORKSPACE/data/downloads
        chmod -R o+w $GITHUB_WORKSPACE/data/Smarty
        chmod -R o+w $GITHUB_WORKSPACE/data/class
        chmod -R o+w $GITHUB_WORKSPACE/data/logs
        chmod -R o+w $GITHUB_WORKSPACE/data/upload
        chmod -R o+w $GITHUB_WORKSPACE/data/config
        chmod o+w $GITHUB_WORKSPACE/html
        echo "complession files..."
        tar czfp $TAG_NAME.tar.gz $REPOSITORY_NAME
        zip -ry $TAG_NAME.zip $REPOSITORY_NAME 1> /dev/null
        md5sum $TAG_NAME.tar.gz | awk '{ print $1 }' > $TAG_NAME.tar.gz.checksum.md5
        md5sum $TAG_NAME.zip | awk '{ print $1 }' > $TAG_NAME.zip.checksum.md5
        sha1sum $TAG_NAME.tar.gz | awk '{ print $1 }' > $TAG_NAME.tar.gz.checksum.sha1
        sha1sum $TAG_NAME.zip | awk '{ print $1 }' > $TAG_NAME.zip.checksum.sha1
        sha256sum $TAG_NAME.tar.gz | awk '{ print $1 }' > $TAG_NAME.tar.gz.checksum.sha256
        sha256sum $TAG_NAME.zip | awk '{ print $1 }' > $TAG_NAME.zip.checksum.sha256
        ls -al

    - name: Upload binaries to release of TGZ
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ runner.workspace }}/${{ github.event.client_payload.tag_name }}.tar.gz
        asset_name: ${{ github.event.client_payload.tag_name }}.tar.gz
        tag: ${{ github.event.client_payload.tag_name }}
        overwrite: true
    - name: Upload binaries to release of ZIP
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ runner.workspace }}/${{ github.event.client_payload.tag_name }}.zip
        asset_name: ${{ github.event.client_payload.tag_name }}.zip
        tag: ${{ github.event.client_payload.tag_name }}
        overwrite: true
    - name: Upload binaries to release of TGZ md5 checksum
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ runner.workspace }}/${{ github.event.client_payload.tag_name }}.tar.gz.checksum.md5
        asset_name: ${{ github.event.client_payload.tag_name }}.tar.gz.checksum.md5
        tag: ${{ github.event.client_payload.tag_name }}
        overwrite: true
    - name: Upload binaries to release of TGZ sha1 checksum
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ runner.workspace }}/${{ github.event.client_payload.tag_name }}.tar.gz.checksum.sha1
        asset_name: ${{ github.event.client_payload.tag_name }}.tar.gz.checksum.sha1
        tag: ${{ github.event.client_payload.tag_name }}
        overwrite: true
    - name: Upload binaries to release of TGZ sha256 checksum
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ runner.workspace }}/${{ github.event.client_payload.tag_name }}.tar.gz.checksum.sha256
        asset_name: ${{ github.event.client_payload.tag_name }}.tar.gz.checksum.sha256
        tag: ${{ github.event.client_payload.tag_name }}
        overwrite: true
    - name: Upload binaries to release of ZIP md5 checksum
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ runner.workspace }}/${{ github.event.client_payload.tag_name }}.zip.checksum.md5
        asset_name: ${{ github.event.client_payload.tag_name }}.zip.checksum.md5
        tag: ${{ github.event.client_payload.tag_name }}
        overwrite: true
    - name: Upload binaries to release of ZIP sha1 checksum
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ runner.workspace }}/${{ github.event.client_payload.tag_name }}.zip.checksum.sha1
        asset_name: ${{ github.event.client_payload.tag_name }}.zip.checksum.sha1
        tag: ${{ github.event.client_payload.tag_name }}
        overwrite: true
    - name: Upload binaries to release of ZIP sha256 checksum
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ runner.workspace }}/${{ github.event.client_payload.tag_name }}.zip.checksum.sha256
        asset_name: ${{ github.event.client_payload.tag_name }}.zip.checksum.sha256
        tag: ${{ github.event.client_payload.tag_name }}
        overwrite: true
